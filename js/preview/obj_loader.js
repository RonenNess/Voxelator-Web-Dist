THREE.OBJLoader=function(){var t=/^[og]\s*(.+)?/,e=/^mtllib /,r=/^usemtl /,i=/^usemap /;function s(){var t={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(t,e){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=t,void(this.object.fromDeclaration=!1!==e);var r=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:t||"",fromDeclaration:!1!==e,geometry:{vertices:[],normals:[],colors:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(t,e){var r=this._finalize(!1);r&&(r.inherited||r.groupCount<=0)&&this.materials.splice(r.index,1);var i={index:this.materials.length,name:t||"",mtllib:Array.isArray(e)&&e.length>0?e[e.length-1]:"",smooth:void 0!==r?r.smooth:this.smooth,groupStart:void 0!==r?r.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(t){var e={index:"number"==typeof t?t:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return e.clone=this.clone.bind(e),e}};return this.materials.push(i),i},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(t){var e=this.currentMaterial();if(e&&-1===e.groupEnd&&(e.groupEnd=this.geometry.vertices.length/3,e.groupCount=e.groupEnd-e.groupStart,e.inherited=!1),t&&this.materials.length>1)for(var r=this.materials.length-1;r>=0;r--)this.materials[r].groupCount<=0&&this.materials.splice(r,1);return t&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),e}},r&&r.name&&"function"==typeof r.clone){var i=r.clone(0);i.inherited=!0,this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(t,e){var r=parseInt(t,10);return 3*(r>=0?r-1:r+e/3)},parseNormalIndex:function(t,e){var r=parseInt(t,10);return 3*(r>=0?r-1:r+e/3)},parseUVIndex:function(t,e){var r=parseInt(t,10);return 2*(r>=0?r-1:r+e/2)},addVertex:function(t,e,r){var i=this.vertices,s=this.object.geometry.vertices;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addVertexPoint:function(t){var e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addVertexLine:function(t){var e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addNormal:function(t,e,r){var i=this.normals,s=this.object.geometry.normals;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addColor:function(t,e,r){var i=this.colors,s=this.object.geometry.colors;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addUV:function(t,e,r){var i=this.uvs,s=this.object.geometry.uvs;s.push(i[t+0],i[t+1]),s.push(i[e+0],i[e+1]),s.push(i[r+0],i[r+1])},addUVLine:function(t){var e=this.uvs;this.object.geometry.uvs.push(e[t+0],e[t+1])},addFace:function(t,e,r,i,s,a,o,n,l){var h=this.vertices.length,c=this.parseVertexIndex(t,h),u=this.parseVertexIndex(e,h),p=this.parseVertexIndex(r,h);if(this.addVertex(c,u,p),this.colors.length>0&&this.addColor(c,u,p),void 0!==i&&""!==i){var m=this.uvs.length;c=this.parseUVIndex(i,m),u=this.parseUVIndex(s,m),p=this.parseUVIndex(a,m),this.addUV(c,u,p)}if(void 0!==o&&""!==o){var f=this.normals.length;c=this.parseNormalIndex(o,f),u=o===n?c:this.parseNormalIndex(n,f),p=o===l?c:this.parseNormalIndex(l,f),this.addNormal(c,u,p)}},addPointGeometry:function(t){this.object.geometry.type="Points";for(var e=this.vertices.length,r=0,i=t.length;r<i;r++)this.addVertexPoint(this.parseVertexIndex(t[r],e))},addLineGeometry:function(t,e){this.object.geometry.type="Line";for(var r=this.vertices.length,i=this.uvs.length,s=0,a=t.length;s<a;s++)this.addVertexLine(this.parseVertexIndex(t[s],r));var o=0;for(a=e.length;o<a;o++)this.addUVLine(this.parseUVIndex(e[o],i))}};return t.startObject("",!1),t}function a(t){THREE.Loader.call(this,t),this.materials=null}return a.prototype=Object.assign(Object.create(THREE.Loader.prototype),{constructor:a,load:function(t,e,r,i){var s=this,a=new THREE.FileLoader(s.manager);a.setPath(this.path),a.load(t,function(t){e(s.parse(t))},r,i)},setMaterials:function(t){return this.materials=t,this},parse:function(a){var o=new s;-1!==a.indexOf("\r\n")&&(a=a.replace(/\r\n/g,"\n")),-1!==a.indexOf("\\\n")&&(a=a.replace(/\\\n/g,""));for(var n=a.split("\n"),l="",h="",c=[],u="function"==typeof"".trimLeft,p=0,m=n.length;p<m;p++)if(l=n[p],0!==(l=u?l.trimLeft():l.trim()).length&&"#"!==(h=l.charAt(0)))if("v"===h){var f=l.split(/\s+/);switch(f[0]){case"v":o.vertices.push(parseFloat(f[1]),parseFloat(f[2]),parseFloat(f[3])),f.length>=7&&o.colors.push(parseFloat(f[4]),parseFloat(f[5]),parseFloat(f[6]));break;case"vn":o.normals.push(parseFloat(f[1]),parseFloat(f[2]),parseFloat(f[3]));break;case"vt":o.uvs.push(parseFloat(f[1]),parseFloat(f[2]))}}else if("f"===h){for(var d=l.substr(1).trim().split(/\s+/),v=[],g=0,b=d.length;g<b;g++){var E=d[g];if(E.length>0){var j=E.split("/");v.push(j)}}var x=v[0];for(g=1,b=v.length-1;g<b;g++){var y=v[g],T=v[g+1];o.addFace(x[0],y[0],T[0],x[1],y[1],T[1],x[2],y[2],T[2])}}else if("l"===h){var R=l.substring(1).trim().split(" "),H=[],L=[];if(-1===l.indexOf("/"))H=R;else for(var w=0,V=R.length;w<V;w++){var M=R[w].split("/");""!==M[0]&&H.push(M[0]),""!==M[1]&&L.push(M[1])}o.addLineGeometry(H,L)}else if("p"===h){var F=l.substr(1).trim().split(" ");o.addPointGeometry(F)}else if(null!==(c=t.exec(l))){var I=(" "+c[0].substr(1).trim()).substr(1);o.startObject(I)}else if(r.test(l))o.object.startMaterial(l.substring(7).trim(),o.materialLibraries);else if(e.test(l))o.materialLibraries.push(l.substring(7).trim());else if(i.test(l))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===h){if((c=l.split(" ")).length>1){var A=c[1].trim().toLowerCase();o.object.smooth="0"!==A&&"off"!==A}else o.object.smooth=!0;(q=o.object.currentMaterial())&&(q.smooth=o.object.smooth)}else{if("\0"===l)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+l+'"')}o.finalize();var P=new THREE.Group;P.materialLibraries=[].concat(o.materialLibraries);for(p=0,m=o.objects.length;p<m;p++){var z=o.objects[p],C=z.geometry,B=z.materials,O="Line"===C.type,U="Points"===C.type,N=!1;if(0!==C.vertices.length){var _=new THREE.BufferGeometry;_.setAttribute("position",new THREE.Float32BufferAttribute(C.vertices,3)),C.normals.length>0?_.setAttribute("normal",new THREE.Float32BufferAttribute(C.normals,3)):_.computeVertexNormals(),C.colors.length>0&&(N=!0,_.setAttribute("color",new THREE.Float32BufferAttribute(C.colors,3))),C.uvs.length>0&&_.setAttribute("uv",new THREE.Float32BufferAttribute(C.uvs,2));for(var G,S=[],D=0,J=B.length;D<J;D++){var k=(W=B[D]).name+"_"+W.smooth+"_"+N,q=o.materials[k];if(null!==this.materials)if(q=this.materials.create(W.name),!O||!q||q instanceof THREE.LineBasicMaterial){if(U&&q&&!(q instanceof THREE.PointsMaterial)){var K=new THREE.PointsMaterial({size:10,sizeAttenuation:!1});THREE.Material.prototype.copy.call(K,q),K.color.copy(q.color),K.map=q.map,q=K}}else{var Q=new THREE.LineBasicMaterial;THREE.Material.prototype.copy.call(Q,q),Q.color.copy(q.color),q=Q}void 0===q&&((q=O?new THREE.LineBasicMaterial:U?new THREE.PointsMaterial({size:1,sizeAttenuation:!1}):new THREE.MeshPhongMaterial).name=W.name,q.flatShading=!W.smooth,q.vertexColors=N?THREE.VertexColors:THREE.NoColors,o.materials[k]=q),S.push(q)}if(S.length>1){for(D=0,J=B.length;D<J;D++){var W=B[D];_.addGroup(W.groupStart,W.groupCount,D)}G=O?new THREE.LineSegments(_,S):U?new THREE.Points(_,S):new THREE.Mesh(_,S)}else G=O?new THREE.LineSegments(_,S[0]):U?new THREE.Points(_,S[0]):new THREE.Mesh(_,S[0]);G.name=z.name,P.add(G)}}return P}}),a}();